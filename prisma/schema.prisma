generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ApiKey {
  key       String   @id
  label     String?
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sessions  WhatsappSession[]
}

enum WhatsappSessionStatus {
  CONNECTED
  DISCONNECTED
  QR
  LOGGED_OUT
  ERROR
}

model WhatsappSession {
  id          Int                    @id @default(autoincrement())
  apiKey      String                 @unique
  apiKeyOwner ApiKey                 @relation(fields: [apiKey], references: [key], onDelete: Restrict)
  displayName String?
  status      WhatsappSessionStatus  @default(DISCONNECTED)
  creds       Json?
  createdAt   DateTime               @default(now())
  updatedAt   DateTime               @updatedAt

  credentials WhatsappCredential[]
}

model WhatsappCredential {
  id        Int              @id @default(autoincrement())
  session   WhatsappSession  @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  sessionId Int
  type      String
  keyId     String
  value     Json?
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt

  @@unique([sessionId, type, keyId])
}

model WhatsappSessionLock {
  apiKey     String   @id
  ownerId    String
  acquiredAt DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([ownerId])
}
